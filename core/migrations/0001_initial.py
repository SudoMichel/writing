# Generated by Django 5.2.1 on 2025-05-14 22:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('role', models.CharField(max_length=100)),
                ('bio', models.TextField()),
                ('traits', models.TextField(help_text='Enter character traits, separated by commas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('purpose', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('characters', models.ManyToManyField(blank=True, related_name='organizations', to='core.character')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlotPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('characters', models.ManyToManyField(blank=True, related_name='plot_points', to='core.character')),
                ('organizations', models.ManyToManyField(blank=True, related_name='plot_points', to='core.organization')),
                ('places', models.ManyToManyField(blank=True, related_name='plot_points', to='core.place')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plot_points', to='core.project')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='place',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='core.project'),
        ),
        migrations.AddField(
            model_name='organization',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to='core.project'),
        ),
        migrations.AddField(
            model_name='character',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='core.project'),
        ),
        migrations.CreateModel(
            name='ResearchNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('tags', models.CharField(blank=True, help_text='Enter tags separated by commas', max_length=500)),
                ('file', models.FileField(blank=True, null=True, upload_to='research_notes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_notes', to='core.project')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CharacterRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='Describe the relationship between these characters')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_from', to='core.character')),
                ('to_character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_to', to='core.character')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('from_character', 'to_character')},
            },
        ),
    ]
